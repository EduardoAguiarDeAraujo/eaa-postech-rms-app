name: CI Pipeline

on:
  push:
    branches: ["main", "develop", "feature/**", "bugfix/**"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # Removido o bloco 'services' para MySQL, pois usaremos um banco de dados em memória

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # Fetch all history for SonarCloud analysis, especially for pull request decoration
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Removido o passo 'Install netcat' e 'Wait for MySQL to be ready'
      # pois não precisamos mais de um serviço de banco de dados externo.

      - name: Build with Maven and Run Tests
        # Ativa o perfil 'test-in-memory' do Spring Boot para usar o H2 em memória.
        env:
          SPRING_PROFILES_ACTIVE: test-in-memory # Ativa o novo perfil para testes em memória
        # The 'verify' phase includes running tests and often JaCoCo report generation
        run: mvn clean verify

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Ativa o perfil 'test-in-memory' também para o Sonar Scan, se necessário para a análise.
          # Geralmente, o Sonar não precisa de um banco de dados em execução para a análise estática.
          SPRING_PROFILES_ACTIVE: test-in-memory
        run: |
          # Execute SonarCloud scan from the root directory.
          # SonarCloud automatically detects Maven multi-module projects.
          # We specify the paths to the JaCoCo XML reports for code coverage.
          # Ensure your pom.xml for each module is configured to generate jacoco.xml reports.
          mvn sonar:sonar \
            -Dsonar.projectKey=EduardoAguiarDeAraujo_eaa-postech-rms-app \
            -Dsonar.organization=eduardoaguiardearaujo \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=rms-clean-core/target/site/jacoco/jacoco.xml,rms-clean-infra/target/site/jacoco/jacoco.xml \
            -Dsonar.sources=rms-clean-core/src/main/java,rms-clean-infra/src/main/java \
            -Dsonar.tests=rms-clean-core/src/test/java,rms-clean-infra/src/test/java \
            -Dsonar.java.binaries=rms-clean-core/target/classes,rms-clean-infra/target/classes

      - name: Upload Test Results - Infra Module
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-infra
          path: rms-clean-infra/target/surefire-reports

      - name: Upload Test Results - Core Module
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-core
          path: rms-clean-core/target/surefire-reports
